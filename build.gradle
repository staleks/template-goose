plugins {
	id 'org.springframework.boot' 			version "${springBootPluginVersion}"
	id 'io.spring.dependency-management' 	version "${springDependencyManagementPluginVersion}"
	id 'net.researchgate.release' 			version "${releasePluginVersion}"
	id 'com.github.spotbugs' 				version "${spotBugsPluginVersion}"
	id 'org.owasp.dependencycheck' 			version "${owaspDependencyCheckPluginVersion}"
	id 'com.diffplug.spotless' 				version "${spotlessPluginVersion}"
}

apply from: "${rootProject.projectDir}/gradle/version.gradle"


allprojects {
	group 'rs.in.staleksit.template.goose'
	version = rootProject.property("version")
	repositories {
		mavenCentral()
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'idea'
	apply plugin: 'com.diffplug.spotless'
	apply plugin: 'io.spring.dependency-management'
	apply from: "${rootProject.projectDir}/gradle/jacoco.gradle"

	java {
		sourceCompatibility = JavaVersion.VERSION_21
		targetCompatibility = JavaVersion.VERSION_21
	}

	compileJava.options.encoding = "UTF-8"
	compileTestJava.options.encoding = "UTF-8"

	repositories {
		mavenCentral()
	}

	dependencies {
		// import BOM
		implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
		implementation platform("org.springframework.boot:spring-boot-starter-parent:${springBootVersion}")

		//~ Lombok
		compileOnly "org.projectlombok:lombok:${lombokVersion}"
		annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
		//~ Spring Utilities
		annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"

		implementation 'org.springframework:spring-context'
		implementation 'io.micrometer:micrometer-registry-prometheus'

		testImplementation("org.projectlombok:lombok:${lombokVersion}")
		testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")

		//~ Testing
		testImplementation 'org.springframework:spring-test'
		testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
		testImplementation "org.junit.jupiter:junit-jupiter:${jUnit5Version}"
	}

	test {
		useJUnitPlatform()

		testLogging {
			events "passed", "skipped", "failed"
		}

		afterSuite { desc, result ->
			if (!desc.parent) {
				println "\nTest result: ${result.resultType}"
				println "Test summary: ${result.testCount} tests, " +
						"${result.successfulTestCount} succeeded, " +
						"${result.failedTestCount} failed, " +
						"${result.skippedTestCount} skipped"
			}
		}

	}

	tasks.withType(Javadoc).all { enabled = false }

	spotless {
		java {
			targetExclude '**/generated/**'
			googleJavaFormat()
		}
	}
}

wrapper {
    gradleVersion = '8.8'
}
